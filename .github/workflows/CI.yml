name: Java CI with Gradle

on:
  push:
    branches: "**"
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.33
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    env:
      working-directory: ./Avocado
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ env.working-directory }}

      - name: Copy secret env
        env:
          SECRET_ENV_DIR: src/main/resources
          SECRET_ENV_FILENAME: env.properties
        run: echo ${{ secrets.TEST_ENV_PROPERTIES }} > $SECRET_ENV_DIR/$SECRET_ENV_FILENAME
        working-directory: ${{ env.working-directory }}

      - name: Copy secret oauth
        env:
          SECRET_OAUTH_DIR: src/main/resources
          SECRET_OAUTH_FILENAME: oauth.properties
        run: echo ${{ secrets.OAUTH_PROPERTIES }} > $SECRET_OAUTH_DIR/$SECRET_OAUTH_FILENAME
        working-directory: ${{ env.working-directory }}

      - name: Build with Gradle
        run: ./gradlew clean build
        working-directory: ${{ env.working-directory }}

      - name: Test with Gradle
        run: ./gradlew --info test
        working-directory: ${{ env.working-directory }}
