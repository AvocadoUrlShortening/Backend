name: Java CD with Gradle

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./Avocado
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant permission for gradlew
        run: chmod +x gradlew
        working-directory: ${{ env.working-directory }}

      - name: Copy secret env
        env:
          SECRET_ENV_DIR: src/main/resources
          SECRET_ENV_FILENAME: env.properties
        run: echo ${{ secrets.ENV_PROPERTIES }} > $SECRET_ENV_DIR/$SECRET_ENV_FILENAME
        working-directory: ${{ env.working-directory }}

      - name: Copy secret oauth
        env:
          SECRET_OAUTH_DIR: src/main/resources
          SECRET_OAUTH_FILENAME: oauth.properties
        run: echo ${{ secrets.OAUTH_PROPERTIES }} > $SECRET_OAUTH_DIR/$SECRET_OAUTH_FILENAME
        working-directory: ${{ env.working-directory }}

      - name: Build with Gradle
        run: ./gradlew clean build
        working-directory: ${{ env.working-directory }}

      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/avocado_app .
        working-directory: ${{ env.working-directory }}

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/avocado_app

      - name: ssh server and docker container start
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            sudo chmod 666 /var/run/docker.sock
            docker rm -f $(docker ps -qa)
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/avocado_app
            docker run -d -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/avocado_app
            docker system prune -f